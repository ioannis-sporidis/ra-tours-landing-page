{"version":3,"sources":["UI/Loading.js","UI/Button.js","components/Tour.js","components/ToursList.js","App.js","index.js"],"names":["Loading","className","Button","props","type","onClick","children","Tour","id","image","info","price","name","removeTour","useState","readMore","setReadMore","src","alt","substring","ToursList","tours","map","tour","App","isLoading","setIsLoading","setTours","fetchTours","a","fetch","response","json","fetchedTours","console","log","useEffect","length","newTours","filter","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4MAQeA,EARC,WACd,OACE,qBAAKC,UAAU,UAAf,SACE,+C,OCQSC,EAXA,SAAAC,GACb,OACE,wBACEC,KAAMD,EAAMC,KACZH,UAAWE,EAAMF,UACjBI,QAASF,EAAME,QAHjB,SAIGF,EAAMG,YC6BEC,EAhCF,SAAC,GAAkD,IAAhDC,EAA+C,EAA/CA,GAAIC,EAA2C,EAA3CA,MAAOC,EAAoC,EAApCA,KAAMC,EAA8B,EAA9BA,MAAOC,EAAuB,EAAvBA,KAAMC,EAAiB,EAAjBA,WAC5C,EAAgCC,oBAAS,GAAzC,mBAAOC,EAAP,KAAiBC,EAAjB,KAEA,OACE,0BAASf,UAAU,cAAnB,UACE,qBAAKgB,IAAKR,EAAOS,IAAKN,IACtB,mCACE,sBAAKX,UAAU,YAAf,UACE,6BAAKW,IACL,qBAAIX,UAAU,aAAd,cAA6BU,QAE/B,8BACGI,EAAWL,EAAH,UAAaA,EAAKS,UAAU,EAAG,KAA/B,OACT,cAAC,EAAD,CACEf,KAAK,SACLC,QAAS,WACPW,GAAaD,IAHjB,SAKGA,EAAW,YAAc,iBAG9B,cAAC,EAAD,CACEX,KAAK,SACLH,UAAU,aACVI,QAAS,kBAAMQ,EAAWL,IAH5B,mCCNOY,EAhBG,SAAAjB,GAChB,OACE,oCACE,qBAAKF,UAAU,QAAf,SACE,6CAEF,qBAAKA,UAAU,cACf,8BACGE,EAAMkB,MAAMC,KAAI,SAAAC,GACf,OAAO,cAAC,EAAD,2BAAwBA,GAAxB,IAA8BV,WAAYV,EAAMU,aAArCU,EAAKf,aCgDlBgB,MApDf,WACE,MAAkCV,oBAAS,GAA3C,mBAAOW,EAAP,KAAkBC,EAAlB,KACA,EAA0BZ,mBAAS,IAAnC,mBAAOO,EAAP,KAAcM,EAAd,KAOMC,EAAU,uCAAG,8BAAAC,EAAA,+EAEQC,MAbjB,8CAWS,cAETC,EAFS,gBAGYA,EAASC,OAHrB,OAGTC,EAHS,OAIfP,GAAa,GACbC,EAASM,GALM,kDAOfP,GAAa,GACbQ,QAAQC,IAAR,MARe,0DAAH,qDAgBhB,OAJAC,qBAAU,WACRR,MACC,IAECH,EAEA,+BACE,cAAC,EAAD,MAIe,IAAjBJ,EAAMgB,OAEN,iCACE,qBAAKpC,UAAU,QAAf,SACE,sDAGF,cAAC,EAAD,CAAQG,KAAK,SAASC,QAASuB,EAAY3B,UAAU,MAArD,wBAOJ,+BACE,cAAC,EAAD,CAAWoB,MAAOA,EAAOR,WA3CV,SAAAL,GACjB,IAAM8B,EAAWjB,EAAMkB,QAAO,SAAAhB,GAAI,OAAIA,EAAKf,KAAOA,KAClDmB,EAASW,SCRbE,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.bd7c59cf.chunk.js","sourcesContent":["const Loading = () => {\n  return (\n    <div className='loading'>\n      <h1>Loading...</h1>\n    </div>\n  );\n};\n\nexport default Loading;\n","const Button = props => {\n  return (\n    <button\n      type={props.type}\n      className={props.className}\n      onClick={props.onClick}>\n      {props.children}\n    </button>\n  );\n};\n\nexport default Button;\n","import { useState } from 'react';\nimport Button from '../UI/Button';\n\nconst Tour = ({ id, image, info, price, name, removeTour }) => {\n  const [readMore, setReadMore] = useState(false);\n\n  return (\n    <article className='single-tour'>\n      <img src={image} alt={name} />\n      <footer>\n        <div className='tour-info'>\n          <h4>{name}</h4>\n          <h4 className='tour-price'>${price}</h4>\n        </div>\n        <p>\n          {readMore ? info : `${info.substring(0, 200)}...`}\n          <Button\n            type='button'\n            onClick={() => {\n              setReadMore(!readMore);\n            }}>\n            {readMore ? 'show less' : 'read more'}\n          </Button>\n        </p>\n        <Button\n          type='button'\n          className='delete-btn'\n          onClick={() => removeTour(id)}>\n          Not Interested\n        </Button>\n      </footer>\n    </article>\n  );\n};\n\nexport default Tour;\n","import Tour from './Tour';\n\nconst ToursList = props => {\n  return (\n    <section>\n      <div className='title'>\n        <h2>Our tours</h2>\n      </div>\n      <div className='underline'></div>\n      <div>\n        {props.tours.map(tour => {\n          return <Tour key={tour.id} {...tour} removeTour={props.removeTour} />;\n        })}\n      </div>\n    </section>\n  );\n};\n\nexport default ToursList;\n","import { useState, useEffect } from 'react';\nimport Loading from './UI/Loading';\nimport ToursList from './components/ToursList';\nimport Button from './UI/Button';\n\nconst url = 'https://course-api.com/react-tours-project';\n\nfunction App() {\n  const [isLoading, setIsLoading] = useState(true);\n  const [tours, setTours] = useState([]);\n\n  const removeTour = id => {\n    const newTours = tours.filter(tour => tour.id !== id);\n    setTours(newTours);\n  };\n\n  const fetchTours = async () => {\n    try {\n      const response = await fetch(url);\n      const fetchedTours = await response.json();\n      setIsLoading(false);\n      setTours(fetchedTours);\n    } catch (error) {\n      setIsLoading(false);\n      console.log(error);\n    }\n  };\n\n  useEffect(() => {\n    fetchTours();\n  }, []);\n\n  if (isLoading) {\n    return (\n      <main>\n        <Loading />\n      </main>\n    );\n  }\n  if (tours.length === 0) {\n    return (\n      <main>\n        <div className='title'>\n          <h2>No more tours left</h2>\n        </div>\n\n        <Button type='button' onClick={fetchTours} className='btn'>\n          refresh\n        </Button>\n      </main>\n    );\n  }\n  return (\n    <main>\n      <ToursList tours={tours} removeTour={removeTour} />\n    </main>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}